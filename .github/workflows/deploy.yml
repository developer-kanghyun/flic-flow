name: Deploy to Server

# 이 워크플로우가 언제 실행될지 정의
on:
  push:
    branches:
      - main  # main 브랜치에 push가 발생했을 때만 실행

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # 이 작업은 GitHub이 제공하는 우분투 환경에서 실행

    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Docker Hub에 로그인
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }} # Docker Hub에서 Access Token을 발급받아 등록해야 함

      # 3. Docker 이미지 빌드 및 Docker Hub에 푸시
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/flic-flow:latest # 이미지 이름: <DockerHub유저명>/flic-flow:latest
          build-args: |
            VITE_TMDB_API_KEY=${{ secrets.VITE_TMDB_API_KEY }}
            VITE_OMDB_API_KEY=${{ secrets.VITE_OMDB_API_KEY }}
            VITE_YOUTUBE_API_KEY=${{ secrets.VITE_YOUTUBE_API_KEY }}

      # 4. SSH를 통해 서버에 접속하여 배포 스크립트 실행
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            # 서버에서 실행할 명령어들
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/flic-flow:latest
            docker stop flic-flow-container || true
            docker rm flic-flow-container || true
            docker run -d -p 127.0.0.1:8080:80 --name flic-flow-container --restart=unless-stopped ${{ secrets.DOCKER_HUB_USERNAME }}/flic-flow:latest