# 워크플로우 이름
name: CI/CD for Flic Flow

# 실행 조건 (Main branch로 push 했을 때,)
on:
  push:
    branches:
      - main

jobs:
  # 빌드 및 테스트 잡
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Create .env file for build
        run: |
          echo "VITE_TMDB_API_KEY=${{ secrets.VITE_TMDB_API_KEY }}" > .env
          echo "VITE_OMDB_API_KEY=${{ secrets.VOTE_OMDB_API_KEY }}" >> .env
          echo "VITE_YOUTUBE_API_KEY=${{ secrets.VOTE_YOUTUBE_API_KEY }}" >> .env
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build Docker image for testing
        run: docker build -t temp-flic-flow-test:latest .
      - name: Run a simple test on the built image
        run: |
          docker run -d -p 8080:80 --name test-container temp-flic-flow-test:latest
          echo "Waiting for container to start..."
          sleep 15
          echo "Checking if the server is responsive..."
          curl -f http://localhost:8080 || (docker logs test-container && exit 1)
          echo "Test passed!"
          docker stop test-container
          docker rm test-container

  # 배포 잡 (Deploy Job)
  deploy:
    needs: build_and_test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push image to Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/flic-flow:latest
          build-args: |
            VITE_TMDB_API_KEY=${{ secrets.VITE_TMDB_API_KEY }}
            VITE_OMDB_API_KEY=${{ secrets.VOTE_OMDB_API_KEY }}
            VITE_YOUTUBE_API_KEY=${{ secrets.VOTE_YOUTUBE_API_KEY }}

      - name: Deploy to production server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: ${{ secrets.SERVER_PORT }}
          timeout: 60s
          command_timeout: 10m
          script: |
            # 스크립트 실행이 끝나면 명시적으로 세션을 종료
            set -e
            echo "--- Starting deployment on server ---"
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/flic-flow:latest
            docker stop flic-flow-container || true
            docker rm flic-flow-container || true
            docker run -d -p 127.0.0.1:8080:80 \
              --name flic-flow-container \
              --restart=unless-stopped \
              ${{ secrets.DOCKER_HUB_USERNAME }}/flic-flow:latest
            docker image prune -f
            echo "--- Deployment finished successfully! ---"
            exit 0